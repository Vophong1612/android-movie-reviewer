plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-android'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "vn.gst.sun.moviestatistic"
        minSdk 23
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        // Enables Jetpack Compose for this module
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion '1.3.0'
    }
}

dependencies {
    api(platform(project(':depconstraints')))
    kapt(platform(project(':depconstraints')))
    implementation project(':core')
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation(Libs.ANDROIDX_CORE_KTX)
    implementation(Libs.ANDROIDX_APPCOMPAT)
    implementation(Libs.GOOGLE_MATERIAL)
    implementation(Libs.CONSTRAINTLAYOUT)

    implementation(Libs.RETROFIT)
    implementation(Libs.GSON)

    implementation(Libs.RXANDROID)
    implementation(Libs.RXJAVA)
    implementation(Libs.RX_ADAPTER_RETROFIT)

    implementation(Libs.DAGGER_2)
    implementation(Libs.DAGGER_ANDROID)
    kapt(Libs.DAGGER_COMPILER)
    kapt(Libs.DAGGER_ANDROID_PROCESSOR)

    // Integration with activities
    implementation(Libs.COMPOSE_ACTIVITY)
    // Compose Material Design
    implementation(Libs.COMPOSE_MATERIAL)
    // Animations
    implementation(Libs.COMPOSE_ANIMATION)
    // Tooling support (Previews, etc.)
    implementation(Libs.COMPOSE_UI)
    // Integration with ViewModels
    implementation(Libs.COMPOSE_VIEWMODEL)
    implementation(Libs.COMPOSE_LIVEDATA)

    implementation(Libs.COMPOSE_PAGER)
    // If using indicators, also depend on
    implementation(Libs.COMPOSE_PAGER_INDICATOR)

    implementation(Libs.COMPOSE_COIL)

    implementation(Libs.COMPOSE_SWIPE_REFRESH)

    testImplementation project(':core')
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}